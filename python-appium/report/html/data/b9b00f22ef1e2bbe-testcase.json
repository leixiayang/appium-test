{
  "uid" : "b9b00f22ef1e2bbe",
  "name" : "TestLogin.test_login",
  "title" : "Test login",
  "time" : {
    "start" : 1492742185883,
    "stop" : 1492742214014,
    "duration" : 28131
  },
  "summary" : {
    "attachments" : 0,
    "steps" : 1
  },
  "failure" : {
    "message" : "NotFoundElementError: ",
    "stackTrace" : "self = <base.action.ElementActions object at 0x00000201D8769240>\nlocator = {'name': '登录入口', 'type': 'id', 'value': 'com.grandale.uo:id/btn_my'}\nis_need_displayed = True\n\n    def _find_element(self, locator, is_need_displayed=True):\n        \"\"\"查找单个元素,如果有多个返回第一个\n    \n            Args:\n                locator: 定位器\n                is_need_displayed: 是否需要定位的元素必须展示\n    \n            Returns: 元素\n    \n            Raises: NotFoundElementError\n                    未找到元素会抛 NotFoundElementError 异常\n    \n            \"\"\"\n        if 'timeOutInSeconds' in locator:\n            wait = locator['timeOutInSeconds']\n        else:\n            wait = 20\n    \n        try:\n            if is_need_displayed:\n                WebDriverWait(self.driver, wait).until(\n>                   lambda driver: self._get_element_by_type(driver, locator).is_displayed())\n\nbase\\action.py:263: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f7b6e713-8124-42fb-9a51-9df6a72f3d51\")>\nmethod = <function ElementActions._find_element.<locals>.<lambda> at 0x00000201D8765378>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n            return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\hyh\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test.test_home.TestLogin object at 0x00000201D8757320>\naction = <base.action.ElementActions object at 0x00000201D8769240>\n\n    def test_login(self, action: ElementActions):\n        L.d('test_login')\n        account = Steps.get_account()\n        action.sleep(3)\n        # action.test_SwipeGuideImages()\n>       action.click(HomePage.登录入口)\n\ntest\\test_home.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\action.py:87: in click\n    el = self._find_element(locator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.action.ElementActions object at 0x00000201D8769240>\nlocator = {'name': '登录入口', 'type': 'id', 'value': 'com.grandale.uo:id/btn_my'}\nis_need_displayed = True\n\n    def _find_element(self, locator, is_need_displayed=True):\n        \"\"\"查找单个元素,如果有多个返回第一个\n    \n            Args:\n                locator: 定位器\n                is_need_displayed: 是否需要定位的元素必须展示\n    \n            Returns: 元素\n    \n            Raises: NotFoundElementError\n                    未找到元素会抛 NotFoundElementError 异常\n    \n            \"\"\"\n        if 'timeOutInSeconds' in locator:\n            wait = locator['timeOutInSeconds']\n        else:\n            wait = 20\n    \n        try:\n            if is_need_displayed:\n                WebDriverWait(self.driver, wait).until(\n                    lambda driver: self._get_element_by_type(driver, locator).is_displayed())\n            else:\n                WebDriverWait(self.driver, wait).until(\n                    lambda driver: self._get_element_by_type(driver, locator) is not None)\n            return self._get_element_by_type(self.driver, locator)\n        except Exception as e:\n            L.e(\"[element] 页面中未能找到 %s 元素\" % locator)\n>           raise NotFoundElementError\nE           exception.exceptions.NotFoundElementError\n\nbase\\action.py:270: NotFoundElementError"
  },
  "description" : null,
  "severity" : "NORMAL",
  "status" : "FAILED",
  "suite" : {
    "uid" : "7bfaec6df150a8e5",
    "name" : "test.test_home",
    "title" : "Test home"
  },
  "steps" : [ {
    "name" : "获取账号和密码",
    "title" : "获取账号和密码",
    "time" : {
      "start" : 1492742190584,
      "stop" : 1492742190586,
      "duration" : 2
    },
    "summary" : {
      "attachments" : 0,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ ],
    "steps" : [ ]
  } ],
  "attachments" : [ ],
  "issues" : [ ],
  "testIds" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "DESKTOP-33SMPDQ"
  }, {
    "name" : "thread",
    "value" : "9480-MainThread"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "suite-name",
    "value" : "test.test_home"
  }, {
    "name" : "severity",
    "value" : "normal"
  } ],
  "parameters" : [ ]
}